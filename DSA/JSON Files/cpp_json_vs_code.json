{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "cpp",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			" ",
			"int main(){",
			"	return 0;",
			"}"
		],
		"description": "Cpp boil code."
	}
	"Print to console 2": {
		"prefix": "array",
		"body": [
			"int n;",
			"cin>>n;",
			"int arr[n];",
			"for(int i=0; i<n; i++){",
			"cin>>arr[i];",
			"}",
			"for(int i=0; i<n; i++){",
			"cout<<arr[i]<< ;",
			"}"
		],
		"description": "Array boil code."
	}
	"Print to console 3": {
		"prefix": "tnode",
		"body": [
			"struct Node",
			"{",
			"int data;",
			"struct Node *left;",
			"struct Node *right;",
			"Node(int val)",
			"{",
			"data = val;",
			"left = NULL;",
			"right = NULL;",
			"}",
			"};"
		],
		"description": "Node of trees boil code."
	}
	"Print to console 4": {
		"prefix": "tree",
		"body": [
			"//  Tree Creation.",
			"struct Node *root = new Node(1);",
			"root->left = new Node(2);",
			"root->right = new Node(3);",
			"root->left->left = new Node(4);",
			"root->left->right = new Node(5);",
			"root->right->left = new Node(6);",
			"root->right->right = new Node(7);"
		],
		"description": "Trees boil code."
	}
	"Print to console 5": {
		"prefix": "Node",
		"body": [
			"struct Node",
			"{",
			"int data;",
			"struct Node *next;",
			"};",
			"void linkedListTraversal(struct Node *ptr)",
			"{",
			"while (ptr != NULL)",
			"{",
			"cout<<ptr->data;",
			"ptr = ptr->next;",
			"}",
			"}"
		],
		"description": "Linked List Traversal and Node boil code."
	}
}
